<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    

<mapper namespace="com.neusoft.entity.User">

  <select id="checkUserName"  parameterType="java.lang.String"  
  resultType="java.lang.Integer">
  	  select count(username) from user where username=#{username}
  </select>
  
  <select id="findUserByUsernameAnaPassword"  parameterType="java.util.Map" resultType="com.neusoft.entity.User">
  select id,username,password,email,phone,question,answer,role,create_time,update_time from user where username=#{username} and password=#{password}
  
  </select>
  
  <update id="updateTokenByUserId"  parameterType="java.util.Map">
  update user set token=#{token} where id=#{userid}
  </update>
  
 <select id="findUserByToken"  parameterType="java.lang.String"  
  resultType="user">
  	 select id,username,password,email,phone,question,answer,role,create_time,update_time from user where token=#{token}
  </select>
  
<select id="findAllUser"  resultType="user">
select id,username,password,email,phone,question,answer,role,create_time,update_time from user
</select>

<select id="findTotalCount" resultType="java.lang.Integer">
select count(id) from user
</select>

<select id="findUserByPage"  parameterType="java.util.Map" resultType="user">
select id,username,password,email,phone,question,answer,role,create_time,update_time from user limit #{offset},#{pageSize}
</select>

<insert id="addUser" parameterType="user" keyColumn="id" keyProperty="id" statementType="PREPARED" useGeneratedKeys="true">
insert into user (username,password,email,phone,question,answer,role,create_time,update_time) values(#{username},#{password},#{email},#{phone},#{question},#{answer},#{role},now(),now())
</insert>

<delete id="deleteUserById" parameterType="int" statementType="PREPARED">
delete from user where id=#{id}
</delete>

<select id="findUserById" parameterType="int"  resultType="user" statementType="PREPARED">
select id,username,password,email,phone,question,answer,role,create_time,update_time from user where id=#{id}
</select>
<update id="updateUser" parameterType="user" statementType="PREPARED" >
update user set username=#{username},password=#{password},email=#{email},phone=#{phone},question=#{question},answer=#{answer},role=#{role},create_time=now(),update_time=now() where id=#{id}
</update>

<insert id="addBatchUser" parameterType="list">
insert into user(username,password,email,phone,question,answer,role,create_time,update_time) values
<foreach collection="list" item="user" separator="," >
(#{user.username},#{user.password},#{user.email},#{user.phone},#{user.question},#{user.answer},#{user.role},now(),now())
</foreach>
</insert>

<!-- 根据ids查询指定的用户信息 -->
<select id="findUserByforeach" parameterType="java.util.ArrayList" resultType="user">
select id,username,password,email,phone,question,answer,role,create_time,update_time from user where id in
<foreach collection="list" item="id" open="(" close=")" separator=",">
#{id}
</foreach>
</select>
</mapper>
